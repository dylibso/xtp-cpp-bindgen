// THIS FILE WAS GENERATED BY `xtp-cpp-bindgen`. DO NOT EDIT.
#include <chrono>
#include <cstddef>
#include <expected>
#include <memory>
#include <stdint.h>
#include <string>
#include <string_view>
#include <vector>

namespace pdk {

enum class Fruit { apple, orange, banana, strawberry };

enum class GhostGang { blinky, pinky, inky, clyde };

struct WriteParams {
  // key
  std::string key;
  // value
  std::vector<uint8_t> value;
};

struct ComplexObject {
  // Parameters to write to kv store
  struct WriteParams writeParams;
  // A string prop
  std::string aString;
  // A datetime object
  // std::chrono::zoned_time anOptionalDate;
  std::string anOptionalDate;
  // A enum prop
  GhostGang ghost;
  // A int prop
  int32_t anInt;
  // A boolean prop
  bool aBoolean;
};

enum class Error { extism, host_null, not_json };

std::expected<bool, Error> eatAFruit(Fruit input);
std::expected<std::vector<std::byte>, Error> kv_read(std::string_view input);
std::expected<void, Error> kv_write(const WriteParams &input);
} // namespace pdk

namespace impl {
std::unique_ptr<pdk::ComplexObject> referenceTypes(pdk::Fruit input);
std::vector<bool> topLevelPrimitives(std::string &&input);
void voidFunc();
} // namespace impl
