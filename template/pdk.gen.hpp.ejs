// THIS FILE WAS GENERATED BY `xtp-cpp-bindgen`. DO NOT EDIT.
#include <chrono>
#include <cstddef>
#include <expected>
#include <memory>
#include <span>
#include <stdint.h>
#include <string>
#include <string_view>
#include <vector>

namespace pdk {

<%# encode enums  -%>
<% for (const schema of enums) { %>
// <%- formatCommentLine(schema.description) %>
enum class <%- makePublic(schema.name) %> {
  <%- schema.enum.join(', ') %>
};
<% } %>

<%# encode structs  -%>
<% for (const schema of objects) { %>
// <%- formatCommentLine(schema.description) %>
struct <%- makePublic(schema.name) %> {
  <% for (const prop of schema.properties) { -%>
  // <%- formatCommentLine(prop.description) %>
  <%-toCppType(prop, '') %> <%- prop.name -%>;
  <% } %>
};
<% } %>

<%# encode host function prototypes  -%>
// host function errors
enum class Error { extism, host_null, not_json, json_null, not_implemented };

<% for (const func of schema.imports) { -%>
/**
 * <%- formatCommentBlock(func.description) %>
<% if (func.input || func.output) { -%>
 *
<% } -%>
<% if (func.input) { -%>
 * @param input <%- formatCommentBlock(func.input.description) %>
<% } -%>
<% if (func.output) { -%>
 * @return <%- formatCommentBlock(func.output.description) %>
<% } -%>
*/
<%- getImportReturnType(func) -%> <%- func.name-%>(<%- getImportParamType(func) -%> <%- getParamName(func) -%>);

<% } %>
} // namespace pdk

namespace impl {

<%# encode impl function prototypes  -%>
<% for (const func of schema.exports) { -%>
/**
 * <%- formatCommentBlock(func.description) %>
<% if (func.input || func.output) { -%>
 *
<% } -%>
<% if (func.input) { -%>
 * @param input <%- formatCommentBlock(func.input.description) %>
<% } -%>
<% if (func.output) { -%>
 * @return <%- formatCommentBlock(func.output.description) %>
<% } -%>
*/
<%- getExportReturnType(func) -%> <%- func.name-%>(<%- getExportParamType(func) -%> <%- getParamName(func) -%>);

<% } -%>
} // namespace impl
